\l
\du
\i playground/create-user.sql 
\du
\dt
\i
\dt
\i table.sql 
\dt
\i table.sql 
\i table.sql 
\dt
\d mans
\d mans
\i table.sql 
\dt
\i table.sql 
\dt
\i table.sql 
\i table.sql 
\i table.sql 
\i table.sql 
\i table.sql 
\i table.sql 
\i table.sql 
\dt
\i table.sql 
\i table.sql 
\i table.sql 
\i table.sql 
\i table.sql 
\i table.sql 
\i table.sql 
\i table.sql 
\i table.sql 
\i table.sql 
\i table.sql 
\i table.sql 
\dt
\i table.sql 
\dt
\connect
\connectinfo
\h
\h ?
\?
\conninfo
\dt
\conninfo
\?
\conninfo
\conninfo
\conninfo
\conninfo
\conninfo
\conninfo
create database prisma;
\c prisma
\conninfo
\l
\dt
\c riieyqyyymtzaz
table user;
select * from user;
\d
\dt
\dl
\d
select * from User;
\conninfo
select * from User;
\d user;
\d User;
\d
\d "User";
select * from User;
select * from user;
select * from user;
select * from user;
select * from user;
\conninfo
\c typeorm 
\d
table user;
table from user;
select * from user;
\c typeorm 
\d
\d user
select * from user;
select * from typeorm.user;
\c clinify 
\d
\d Users
\d users
\d
\d "Users"
\c ideas
\d
\d
\dt
\d idea_entity 
\dt
\dt
drop table idea_entity ;
\dt
\d idea 
table idea ;
\conninfo
\conninfo
\conninfo
\l
\c prisma
\dt
\d
\conninfo
\l
\l
\dt
\d
\d
\prisma
\
\l
\c prisma
\d
\d
\d
\d
\l
\c prisma 
\d
\c prisma 
\d
select * from "books$default"."User";
select * from "default$default"."User";
\l
\l
\dt
\d
\d mikro_orm_migrations
\d
\d
\d
\d
\d
\d
\d user_
\d user
table user;
select * from user;
\l
drop database fatreddit ;
create database fatreddit;
\d
\c typeorm
\dt
table users;
\conninfo
select * from child ;
\dt
select * from users;
select * from users;
select * from users;
select * from users;
select * from users;
\dt
\dt
\dt
select * from ideas;
\dt
\d users_bookmarks_ideas 
\d users_bookmarks_ideas 
select * from users_bookmarks_ideas ;
\dt
\d ideas_upvotes_users 
select * from ideas_upvotes_users ;
select * from ideas_downvotes_users ;
select * from ideas_downvotes_users ;
select * from ideas_downvotes_users ;
select * from ideas;
select * from ideas;
delete from ideas where "authorId" = null;
delete from ideas where "authorId" is null;
select * from ideas;
\dt
select * from users_bookmarks_ideas;
\d users_bookmarks_ideas 
\dt
table comments ;
table comments ;
table comments ;
table comments ;
table comments ;
\dt
select count(*) from users;
select count(*) from ideas;
select count(*) from ideas;
select count(*) from users;
select count(*) from users;
select count(*) from ideas;
select count(*) from ideas;
select count(*) from ideas;
select count(*) from users;
select count(*) from users;
select count(*) from ideas;
select count(*) from ideas;
select count(*) from users;
select count(*) from users;
select count(*) from ideas;
select count(*) from comments ;
select *  from comments ;
\dt
\dt
\dt
\dt
\dt
\dt
\dt
\dt
\dt
\dt
dt
\dt
\d users 
table users ;
table users ;
table users ;
\d users 
\d users 
table users ;
table users ;
\dt
table users ;
select count(*) from users;
select count(*) from persons;
select count(*) from products;
\dt
\d users 
\d persons
\d products
\h
\?
\d
\dt
\l
create database fattylee;
create role fattylee superuser;
\l
\r
\dl
\d
\?
\du
drop role fattylee;
drop user fattylee;
alter role --help;
\h alter
\h alter role
alter role superuser createdb createrole login replication password 'fattylee';
alter role fattylee  superuser createdb createrole login replication password 'fattylee';
\du
alter role fattylee   createdb createrole login replication password 'fattylee';
alter role fattylee   createdb createrole login  password 'fattylee';
alter role fatty   createdb createrole login  password 'fatty';
\du
\l
\dt
\du
drop role fattylee;
\du
\du
\du
\du
drop role fatty;
\du
\h
\h alter role
\h create role
create role fattylee superuser createdb createrole login replication with password 'fattylee';
create role fattylee superuser createdb createrole login replication  password 'fattylee';
\du
\h alter role
alter role fattylee bypassrls;
\du
\d
\l
create database etijar-api;
create database etijar_api;
\l
\conninfo
\dt
\l
\conninfo
\l
\\
\l
\l
\l
\conninfo
\l
\c etijar_api 
\dt
\c etijar-api 
\dt
drop database etijar_api ;
\l
create database blog-api;
create database "blog-api";
\dt
\c blog-api
\dt
\dt
\dt
\conninfo
\du
\du
\du
\du

\dl
\dt
\h
\?
\l
\l+
\l
\d
\du
\h
\h create
\h create role
create role bob superuser createrole password 'password';
\d
\du
\h alter role
alter role bob login createdb replication password 'password';
\du
alter user bob bypassrls;
\du
\conninfo
\h user
\h login
\h role
\?
\c
\c bob
\c
\l
\?
\?|cat
\?
\? c
\h create database
create database aisha owner bob;
\l
c aisha;
\c aisha

\
\dt+
\dt
\dt
\d tasks
\d tasks
\dt
\d tasks
\d tasks
\d tasks
\d tasks
table tasks;
table tasks;
\c aisha 
\dt
\d tasks
\c aisha 
table users;
table users;
table tasks;
table tasks;
\d tasks
\d tasks
table tasks;
table tasks;
table tasks;
table tasks;
table tasks;
table users;
\l
\c aisha
\dt
\dt
\d people
\d users
drop table people ;
\dt
table users;
\d users
table users;
table tasks;
\d tasks
\d tasks
\d tasks
\d tasks
\d tasks
\d tasks
\d tasks
\d tasks
\d tasks
\d tasks
\d tasks
\d tasks
\d tasks
\d tasks
\d tasks
\d tasks
\d tasks
table tasks;
\d tasks
\d tasks
\d tasks
\d tasks
table tasks;
table users;
\d tasks
table users;
table tasks;
\c abu
\dt
\c aisha 
\d
create table students();
drop table students ;
CREATE TABLE students(  id serial primary key,  first_name varchar(255));
\d students
CREATE TABLE papers(  id serial primary key,  title varchar(255),  grade int not null,  student_id int,  foreign key(student_id) references students(id));
\d students
insert into students (first_name) values('Caleb'),('Samantha'),('Raj'),('Carlos'),('Lisa');
table students;
insert into papers (student_id,title,grade) values(1,'My First Book Repor',60),(1,'My Second Book Report',75),(2,'Russian Lit Through Ages',94),(2,'De Montaigne and The Art of The Essay',98),(4,'Borges and Magical Realism',89);
table papers;
select first_name, title, grade from studentsinner join paperson students.id=student_idorder by grade desc;
\h alter table 
\h update
table papers;
update papers set title = 'My First Book Report'where grade=60 returning *;
table papers;
select first_name, title, grade from studentsinner join paperson students.id=student_idorder by grade desc;
select first_name, title, grade from studentsleft outer join paperson students.id=student_idorder by grade desc;
select first_name, title, grade from studentsleft outer join paperson students.id=student_id;
\?
\h
select first_name, title, grade from studentsright outer join paperson students.id=student_id;
select first_name, title, grade from studentsright outer join paperson students.id=student_id;
select first_name, ifnull(title,'MISSING'), grade from studentsleft outer join paperson students.id=student_id;
\h select 
\df 
\df -E
\df information_schema._pg_
\df information_schema._pg_*
create or replace view  show_functions as select routine_name from information_schema.routineswhere routine_type='FUNCTION' and specific_schema ='public';
table show_functions ;
select * from show_functions ;
\c
\conninfo
